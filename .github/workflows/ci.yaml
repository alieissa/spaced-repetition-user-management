on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - main

env:
  REPO: 079829475258.dkr.ecr.us-east-1.amazonaws.com
  IMAGE_NAME: spaced-repetition-user-management

defaults:
  run:
    working-directory: users_umbrella

jobs:
  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        otp: ['25.2.3']
        elixir: ['1.14.3']
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Run static analysis
        run: |
          mix deps.get
          mix credo
  tests:
    needs: static_analysis
    runs-on: ubuntu-20.04
    name: Test
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - "6379:6379"
    strategy:
      matrix:
        otp: ['25.2.3']
        elixir: ['1.14.3']
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      
      - name: Run tests
        run: |
          mix deps.get
          mix test
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOSTNAME: localhost
          REDIS_HOST: localhost
          SECRET_KEY_BASE: 'dummysecretkeybase1234'
    
  release:
    needs: tests
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04
    name: Release
    strategy:
      matrix:
        otp: ['25.2.3']
        elixir: ['1.14.3']
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Get dependencies
        run: mix deps.get
      
      - name: Generate dockerfile
        run: mix phx.gen.release --docker
      
      - name: Add migrations
        run: chmod +x ./.github/workflows/update-dockerfile.sh & ./.github/workflows/update-dockerfile.sh
      
      - name: Build image
        run: |
          echo "Display RESET_PASSWORD_URL before build"
          echo $RESET_PASSWORD_URL
          docker build -t $REPO/$IMAGE_NAME $GITHUB_WORKSPACE
        env:
          RESET_PASSWORD_URL: ${{ vars.RESET_PASSWORD_URL }}

      - name: Login to ECR
        id: ecr
        uses: jwalton/gh-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          region: ${{ vars.REGION }}
      
      - name: Push to ECR
        run: |
          docker build -t $REPO/$IMAGE_NAME $GITHUB_WORKSPACE
          docker push $REPO/$IMAGE_NAME
          docker tag $REPO/$IMAGE_NAME $REPO/$IMAGE_NAME:${GITHUB_SHA::6}
          docker push $REPO/$IMAGE_NAME:${GITHUB_SHA::6}
  deploy:
      needs: 
        - release
      runs-on: ubuntu-22.04
      name: Deploy
      steps:
        - name: Restart ECS Service
          run: aws ecs update-service --cluster sp --service sp-auth --force-new-deployment
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        AWS_DEFAULT_REGION: ${{ vars.REGION }}
